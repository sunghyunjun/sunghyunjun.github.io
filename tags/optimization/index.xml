<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Optimization on Sunghyun Jun Dev Note</title>
    <link>https://sunghyunjun.github.io/tags/optimization/</link>
    <description>Recent content in Optimization on Sunghyun Jun Dev Note</description>
    <generator>Hugo -- 0.151.2</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 19 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sunghyunjun.github.io/tags/optimization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>추론 최적화, 어떻게 접근할 것인가</title>
      <link>https://sunghyunjun.github.io/posts/2025-10-19-inference-optimization/</link>
      <pubDate>Sun, 19 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://sunghyunjun.github.io/posts/2025-10-19-inference-optimization/</guid>
      <description>&lt;p&gt;추론 최적화(Inference Optimization)를 이해하고 최신 트렌드를 놓치지 않는 것은 매우 중요합니다. 하지만 그보다 더 중요한 것은 어떤 기술이 현재의 상황에 가장 적합한가를 판단하는 일이라고 생각합니다.&lt;/p&gt;
&lt;h2 id=&#34;추론-최적화의-기본-요소들&#34;&gt;추론 최적화의 기본 요소들&lt;/h2&gt;
&lt;p&gt;추론 최적화에는 다양한 접근 방식이 존재합니다.&lt;/p&gt;
&lt;p&gt;대표적으로 다음과 같은 개념들이 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compute bound / Memory bound 분석&lt;/li&gt;
&lt;li&gt;Precision 조정 (FP16, BF16, INT8 등)&lt;/li&gt;
&lt;li&gt;Kernel fusion &amp;amp; Compiler 최적화&lt;/li&gt;
&lt;li&gt;Quantization / Sparsity 적용 전략&lt;/li&gt;
&lt;li&gt;Flash Attention, Speculative Decoding 등&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이러한 개념들은 일종의 &amp;lsquo;기본 재료&amp;rsquo;로서, 연구자들과 엔지니어들은 이를 바탕으로 계속해서 한계까지 확장해 나가고 있습니다. 그러나 기술적인 깊이에만 집중하다 보면, 종종 &amp;ldquo;&lt;strong&gt;무엇을 위해 최적화하고 있는가?&lt;/strong&gt;&amp;ldquo;라는 근본적인 질문을 놓치게 됩니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
